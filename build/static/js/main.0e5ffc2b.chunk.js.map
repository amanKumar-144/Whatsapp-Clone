{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unSubscribe","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","displayName","onChange","event","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5ffc2b.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAMdLkrXFtcaKr3KcMZDYH4LweYnc1sOHc\",\n  authDomain: \"whatsapp-clone-4e63b.firebaseapp.com\",\n  projectId: \"whatsapp-clone-4e63b\",\n  storageBucket: \"whatsapp-clone-4e63b.appspot.com\",\n  messagingSenderId: \"509778678065\",\n  appId: \"1:509778678065:web:88e4c3c137be0370fde010\",\n  measurementId: \"G-098YPW8GME\"\n};\n\n\n\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\n\nconst db=firebaseApp.firestore();\nconst auth=firebase.auth();\nconst provider=new firebase.auth.GoogleAuthProvider();\n\nexport {auth,provider};\nexport default db;","import React,{useState,useEffect} from 'react';\nimport \"./SidebarChat.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport db from \"./firebase.js\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction SidebarChat({id,name, addNewChat }) {\n\n    const [seed,setSeed]=useState();\n    const [messages,setMessages]=useState([]);\n\n    useEffect(()=>{\n        if(id){\n\n            db.collection('Rooms').doc(id).collection('Messages').\n            orderBy('timestamp','desc').\n            onSnapshot((snapshot)=>\n                setMessages(snapshot.docs.map(doc=>\n                    doc.data()))\n            );\n        }\n    },[id]);\n\n    useEffect(() =>{\n        setSeed(Math.floor(Math.random()*5000));\n    },[]);\n\n    const createChat=()=>{\n        //Make a pop-up to get info\n        const roomName=prompt(\"Please Enter name for chat\");\n        if(roomName)\n        {\n            //Do some clever stuff... in the database\n            db.collection(\"Rooms\").add({\n                name:roomName\n            });\n        }\n    };\n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n    ) : (\n        <div onClick={createChat} \n        className=\"sidebarChat\">\n            <h2>Add New Chat</h2>\n        </div>\n    );\n}\n\nexport default SidebarChat\n","import React, { createContext, useContext,\nuseReducer } from 'react';\n\nexport const StateContext=createContext();\n\n\nexport const StateProvider = ({ reducer,\ninitialState,children})=>(\n    <StateContext.Provider value={useReducer\n        (reducer,initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue=()=> useContext(StateContext);\n","import React,{useState,useEffect} from 'react'\nimport './Sidebar.css'\nimport { Avatar,IconButton } from \"@material-ui/core\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarChat from \"./SidebarChat.js\";\nimport db from \"./firebase.js\";\nimport {useStateValue} from \"./StateProvider\";\n\n\nfunction Sidebar() {\n    const [rooms,setRooms]=useState([]);\n    const[{user},dispatch]=useStateValue();\n\n    useEffect(() =>{\n        const unSubscribe=db.collection('Rooms').onSnapshot((snapshot)=>{\n            setRooms(snapshot.docs.map((doc)=>({\n                id:doc.id,\n                data:doc.data()\n            }))\n            )\n        });\n\n        return ()=>{\n            unSubscribe();\n        };\n        \n    },[])\n    return (\n\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL}/>\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon/>\n                    </IconButton>\n\n\n                    <IconButton>\n                        <ChatIcon/>\n                    </IconButton>\n\n\n\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                </div>\n            </div>\n\n\n\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n                    <IconButton>\n                        <SearchIcon/>\n                    </IconButton>\n                    <input placeholder=\"Search or start new chat\" type=\"text\"/>\n                </div>\n            </div>\n\n\n\n\n            <div className=\"sidebar__chats\">\n                <SidebarChat addNewChat/>\n                \n                {\n                    rooms.map(room=>(\n                        <SidebarChat key={room.id} id={room.id} \n                        name={room.data.name} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React ,{useState,useEffect} from 'react';\nimport \"./Chat.css\";\nimport { Avatar,IconButton } from \"@material-ui/core\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useParams } from 'react-router-dom';\nimport db from \"./firebase.js\";\nimport firebase from \"firebase\";\nimport {useStateValue} from \"./StateProvider\";\n\nfunction Chat() {\n    const [seed,setSeed]=useState(\"\");\n    const [input,setInput]=useState(\"\");\n    const { roomId }=useParams();\n    const [roomName,setRoomName]=useState(\"\");\n    //Is an array\n    const [messages,setMessages]=useState([]);\n    const [{user},dispatch]=useStateValue();\n\n    useEffect(()=>{\n        if(roomId)\n        {\n            db.collection('Rooms').doc(roomId).onSnapshot(snapshot=>{\n                setRoomName(snapshot.data().name);\n            });\n            setSeed(Math.floor(Math.random()*5000));\n\n\n            db.collection('Rooms').doc(roomId).\n            collection(\"Messages\").orderBy\n            ('timestamp','asc').onSnapshot(snapshot=>{\n                    setMessages(snapshot.docs.map(doc=>\n                        doc.data()))\n                    })\n        }\n    },[roomId]);\n\n    const sendMessage=(event)=>{\n        event.preventDefault();\n        console.log(\"You typed >>> \",input);\n        db.collection('Rooms').doc(roomId).\n        collection(\"Messages\").add({\n            message:input,\n            name:user.displayName,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput(\"\");\n    };\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen {\"  \"}\n                        {\n                            new Date(messages[messages.length - 1]?.\n                                timestamp?.toDate()).toUTCString()\n                        }\n                    </p>\n                </div>\n\n                <div className=\"char__headerRight\">\n                    <IconButton>\n                        <SearchIcon/>\n                    </IconButton>\n\n                    <IconButton>\n                        <AttachFileIcon/>\n                    </IconButton>\n\n                    <IconButton>\n                        <MoreVertIcon/>\n                    </IconButton>\n                </div>\n            </div>\n\n\n\n\n            <div className=\"chat__body\">\n                {messages.map( (message) => (\n                        <p className={`chat__message ${message.name===user.displayName && \"chat__receiver\"}`}>\n                            <span className=\"chat__name\">\n                                {message.name}</span>\n\n                            {message.message}\n\n                            <span className=\"chat__timestamp\">\n                                {new Date(message.timestamp?.toDate\n                                    ()).toUTCString()}\n                            </span>\n                        </p>\n                    ))\n                                }\n            </div>\n\n\n\n\n\n            <div className=\"chat__footer\">\n                <IconButton>\n                    <InsertEmoticonIcon/>\n                </IconButton>\n                <form>\n                    <input \n                    value={input} \n                    onChange={\n                        (event)=>\n                        setInput(event.target.value)\n                    }\n                    placeholder=\"Type a message\" type=\"text\"/>\n                    <button type=\"submit\" onClick={sendMessage}>Send a message</button>\n                </form>\n                <IconButton>\n                    <MicIcon/>\n                </IconButton>\n            </div>\n\n\n\n        </div>\n    )\n}\n\nexport default Chat\n","export const initialState={\n    user:null,\n};\n\n//Push information to data layer\nexport const actionTypes={\n    SET_USER:\"SET_USER\",\n};\n\nconst reducer=(state,action)=>{\n    console.log(action);\n    switch(action.type)\n    {\n        case actionTypes.SET_USER:\n            //Change the data layer\n            return{\n                ...state,\n                user:action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\n\n\nexport default reducer;","import React from 'react'\nimport \"./Login.css\"\nimport { Button } from '@material-ui/core'\nimport {auth,provider} from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport {actionTypes} from \"./reducer\"\n\nfunction Login() {\n    //Pull Stuff from data layer\n    const [{},dispatch]=useStateValue();\n\n    //Setting the user\n    const signIn=()=>{\n        console.log(\"Clicked\");\n        auth.signInWithPopup(provider)\n        .then(result=>{\n            //console.log(result)\n            dispatch({\n                type:actionTypes.SET_USER,\n                user:result.user,\n            });\n        })\n        .catch(error=>alert(error.message));\n    };\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png\"\n                alt=\"No Image\"/>\n                <div className=\"login__text\">\n                    <h1>Sign into Whatsapp</h1>\n                </div>\n                <Button onClick={signIn}>\n                    Sign into Whatsapp\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React,{useState} from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Login from \"./Login.js\";\nimport {useStateValue} from \"./StateProvider\"\n\nfunction App() \n{\n  const[{user},dispatch]=useStateValue();\n\n\n  return (\n    //BEM Naming convention\n    <div className=\"app\">\n      {!user ? (\n        <Login/>\n      ):(\n        <div className=\"app__body\">\n          {/* Sidebar */}\n          <Router>\n            <Sidebar/>\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n\n\n          </Router>\n        </div>\n      )}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from \"./reducer.js\"\nimport {StateProvider} from \"./StateProvider\"\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState}\n      reducer={reducer}>\n    <App />\n    </StateProvider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}